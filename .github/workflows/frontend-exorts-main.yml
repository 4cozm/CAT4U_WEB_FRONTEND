name: Build & Deploy (main)

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build static export
        run: npm run build

      - name: Upload to S3 with cache headers
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
        run: |
          # 1) HTML/문서류 포함 전체를 짧게 캐시
          aws s3 sync ./out s3://cat4uweb/ --delete \
            --cache-control "public,max-age=300,must-revalidate"

          # 2) 정적 자산을 길게 캐시(파일명 해시가 붙어 있으니 안전)
          if [ -d "./out/_next/static" ]; then
            aws s3 cp ./out/_next/static/ s3://cat4uweb/_next/static/ --recursive \
              --metadata-directive REPLACE \
              --cache-control "public,max-age=31536000,immutable"
          fi

          if [ -d "./out/assets" ]; then
            aws s3 cp ./out/assets/ s3://cat4uweb/assets/ --recursive \
              --metadata-directive REPLACE \
              --cache-control "public,max-age=31536000,immutable"
          fi

      - name: Invalidate CloudFront Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
        run: aws cloudfront create-invalidation --distribution-id E15CALDAZ3RCDE --paths "/*"

      # ✅ Discord 알림 (성공)
      - name: Notify Discord (Success, main)
        if: success()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          SHA_SHORT="${GITHUB_SHA::7}"
          cat > payload.json <<'JSON'
          {
            "embeds": [{
              "title": "🚀 main 빌드 성공 & AWS S3 배포 완료",
              "description": "리포지토리: ${REPO}\n커밋: ${SHA}\n런: ${RUN_URL}",
              "color": 5763719
            }]
          }
          JSON
          sed -i "s|\${REPO}|${GITHUB_REPOSITORY}|g" payload.json
          sed -i "s|\${SHA}|${SHA_SHORT}|g" payload.json
          sed -i "s|\${RUN_URL}|https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|g" payload.json
          curl -H "Content-Type: application/json" -X POST -d @payload.json "$WEBHOOK"

      # ✅ Discord 알림 (실패)
      - name: Notify Discord (Failure, main)
        if: failure()
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          SHA_SHORT="${GITHUB_SHA::7}"
          cat > payload.json <<'JSON'
          {
            "embeds": [{
              "title": "🔥 main 빌드 실패",
              "description": "리포지토리: ${REPO}\n커밋: ${SHA}\n런: ${RUN_URL}",
              "color": 15548997
            }]
          }
          JSON
          sed -i "s|\${REPO}|${GITHUB_REPOSITORY}|g" payload.json
          sed -i "s|\${SHA}|${SHA_SHORT}|g" payload.json
          sed -i "s|\${RUN_URL}|https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}|g" payload.json
          curl -H "Content-Type: application/json" -X POST -d @payload.json "$WEBHOOK"
